{"version":3,"sources":["services/auth.service.js","components/Message.js","components/Login.js","components/Home.js","components/TodoTag.js","components/TagForm.js","components/TodoItem.js","services/auth.header.js","services/todo.service.js","components/ItemForm.js","components/Loader.js","components/TodoList.js","components/SecuredRoute.js","App.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","access_token","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","Message","message","color","style","Login","login","logout","useState","setUsername","setPassword","history","useHistory","register","setRegister","setMessage","setColor","className","onSubmit","event","preventDefault","trim","AuthService","catch","error","undefined","push","status","htmlFor","type","value","onChange","target","onClick","padding","Home","logIn","logOut","textAlign","TodoTag","tag","backgroundColor","title","TagForm","addTag","item","messageColor","clearMessage","show","setShow","colors","counter","setCounter","setValue","Fragment","width","length","id","Date","now","itemId","display","justifyContent","styles","li","alignItems","border","borderRadius","marginBottom","TodoItem","toggleItem","tags","classes","done","join","checked","index","map","authHeader","user","Authorization","headers","get","params","put","delete","items","ItemForm","onCreate","Loader","margin","TodoList","setItems","tagMessage","setTagMessage","loading","setLoading","clearTagMessage","added","TodoService","updateItemDone","filter","updateIndexes","useEffect","getCurrentUser","getTodoItems","setTimeout","newItem","ownerName","concat","addItem","responseItem","onDragEnd","param","srcI","source","desI","destination","splice","droppableId","provided","_","ref","innerRef","droppableProps","i","draggableId","snapshot","draggableProps","dragHandleProps","boxShadow","isDragging","placeholder","SecuredRoute","props","path","render","component","to","pathname","App","setLogin","textDecoration","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7bba1ecd.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/\";\r\n\r\nclass AuthService {\r\n    login(username, password) {\r\n        return axios\r\n            .post(API_URL + \"login\", {\r\n                username,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if (response.data.access_token) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    register(username, password) {\r\n        return axios.post(API_URL + \"register\", {\r\n            username,\r\n            password\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n}\r\n\r\nexport default new AuthService();","function Message({message, color}) {\r\n    return (\r\n        <p style={{color: color}}>{message}</p>\r\n    )\r\n}\r\n\r\nexport default Message","import React, {useState} from \"react\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Message from \"./Message\";\r\nimport '../css/login.css'\r\n\r\n\r\nfunction Login({login, logout}) {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n    const [register, setRegister] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [color, setColor] = useState('')\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (username.trim() && password.trim()) {\r\n            if (!register)\r\n                AuthService.login(username, password).then(() => {\r\n                    login();\r\n                    setMessage('')\r\n                    setColor('')\r\n                    history.push('/todo')\r\n                }).catch((error) => {\r\n                    logout()\r\n                    if (error.response === undefined) {\r\n                        setMessage(error.message)\r\n                        setColor('RED')\r\n                    } else if (error.response.status === 401) {\r\n                        let message = 'Invalid login or password'\r\n                        setMessage(message)\r\n                        setColor('RED')\r\n                    }\r\n\r\n                })\r\n            else {\r\n                AuthService.register(username, password).then(() => {\r\n                    setMessage('successfully registered')\r\n                    setColor('GREEN')\r\n                }).catch((error) => {\r\n                    if (error.response === undefined) {\r\n                        setMessage(error.message)\r\n                        setColor('RED')\r\n                    } else {\r\n                        setMessage(error.response.data)\r\n                        setColor('RED')\r\n                    }\r\n                })\r\n            }\r\n            setUsername('');\r\n            setPassword('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginForm\">\r\n            <form className='form' onSubmit={submitHandler}>\r\n                <div>\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <br/>\r\n                    <input type=\"text\" value={username} onChange={event => {\r\n                        setUsername(event.target.value)\r\n                    }}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <br/>\r\n                    <input type=\"password\" value={password} onChange={event => {\r\n                        setPassword(event.target.value)\r\n                    }}/>\r\n                </div>\r\n\r\n                <div className=\"buttons\">\r\n                    <button type='submit' onClick={() => setRegister(false)}>\r\n                        <span>Login</span>\r\n                    </button>\r\n\r\n                    <button type=\"submit\" onClick={() => setRegister(true)}>\r\n                        Register\r\n                    </button>\r\n                </div>\r\n                {message ? <Message style={{padding: \"10px\"}} color={color} message={message}/> : undefined}\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import Login from \"./Login\";\r\n\r\n\r\nfunction Home({logIn, logOut}) {\r\n\r\n\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <h1>Welcome to home page</h1>\r\n            <div>\r\n                <Login login={logIn} logout={logOut}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\"\r\n\r\nfunction TodoTag({tag}){\r\n\r\n    return(\r\n        <div className='tag' style={{backgroundColor: tag.color}}>\r\n            <strong>{tag.title}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoTag","import React, {useState} from 'react'\r\nimport '../css/modal.css'\r\nimport Message from \"./Message\";\r\n\r\nfunction TagForm({addTag, item, message, messageColor, clearMessage}) {\r\n    const [show, setShow] = useState(false)\r\n    let colors = ['CRIMSON', 'DEEPSKYBLUE', 'BLACK', 'LIMEGREEN']\r\n    const [color, setColor] = useState(colors[0])\r\n    const [counter, setCounter] = useState(1)\r\n    const [value, setValue] = useState('')\r\n\r\n    function changeColor() {\r\n        setCounter((counter + 1) % 4);\r\n        setColor(colors[counter])\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (value.length > 20) {\r\n            return;\r\n        }\r\n        if (value.trim()) {\r\n            let tag = {\r\n                id: Date.now(),\r\n                title: value,\r\n                color: color,\r\n                itemId: item.id\r\n            }\r\n            addTag(tag);\r\n            setValue(' ');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button style={{width: '30px'}} onClick={() => setShow(true)}>+</button>\r\n            {show && (<div className='modal'>\r\n                <div className='modal-body'>\r\n                    <h1>Add new tag</h1>\r\n                    <div>\r\n                        <form style={{textAlign: 'center'}} onSubmit={handleSubmit}>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <button className='color-button' style={{backgroundColor: color}}\r\n                                        onClick={changeColor}/>\r\n                                <input value={value} type='text' onChange={event => {\r\n                                    setValue(event.target.value)\r\n                                }}/>\r\n                            </div>\r\n                            <div className='buttonDiv'>\r\n                                <button type='submit'>Add tag</button>\r\n                            </div>\r\n                            <div className='buttonDiv'>\r\n                                <button onClick={() => {\r\n                                    setShow(false);\r\n                                    clearMessage()\r\n                                }}>close\r\n                                </button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                    {message ? <Message color={messageColor} message={message}/> : undefined}\r\n                </div>\r\n            </div>)}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TagForm;\r\n","import React from 'react'\r\nimport TodoTag from \"./TodoTag\";\r\nimport TagForm from \"./TagForm\";\r\n\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 2rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '5px',\r\n        marginBottom: '.5rem'\r\n    },\r\n}\r\n\r\n\r\nfunction TodoItem({item, toggleItem, removeItem, tags, addTag, message, color, clearMessage}) {\r\n    const classes = []\r\n\r\n    if (item.done) {\r\n        classes.push('done')\r\n        classes.push('doneText')\r\n    }\r\n    return (\r\n        <li style={styles.li} className={classes.join(' ')}>\r\n            <span className={classes.join(' ')}>\r\n                <input checked={item.done} type='checkbox' onChange={() => toggleItem(item.id)}/>\r\n                <strong>{item.index}</strong>\r\n                &nbsp;\r\n                {item.title}\r\n            </span>\r\n\r\n            <div style={{display: 'flex'}}>\r\n                <div style={{display: 'flex'}}>\r\n                    {\r\n                        tags ? tags.map(tag => {\r\n                            return <TodoTag key={tag.id} tag={tag}/>\r\n                        }) : undefined\r\n                    }\r\n                </div>\r\n                <TagForm addTag={addTag} item={item} message={message} messageColor={color}\r\n                         clearMessage={clearMessage}/>\r\n                <button style={{width: '30px'}} onClick={() => removeItem(item.id)}>&times;</button>\r\n            </div>\r\n        </li>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default TodoItem;","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.access_token) {\r\n        return {Authorization: 'Bearer ' + user.access_token};\r\n    } else {\r\n        return {};\r\n    }\r\n}","import axios from 'axios';\r\nimport authHeader from './auth.header'\r\n\r\nconst API_URL = 'http://localhost:8080/todolist';\r\n\r\nclass TodoService {\r\n\r\n    addTag(tag) {\r\n        return axios.post(API_URL + \"/tag\", tag, {headers: authHeader()})\r\n    }\r\n\r\n    addItem(item) {\r\n        return axios.post(API_URL, item, {headers: authHeader()})\r\n    }\r\n\r\n    getTodoItems(username) {\r\n        return axios.get(API_URL, {\r\n            params: {\r\n                username: username\r\n            },\r\n            headers: authHeader()\r\n        })\r\n    };\r\n\r\n    updateItemDone(item) {\r\n        return axios.put(API_URL + '/done', item, {headers: authHeader()})\r\n    };\r\n\r\n    removeItem(id) {\r\n        return axios.delete(API_URL, {\r\n            params: {\r\n                id: id\r\n            },\r\n            headers: authHeader()\r\n        })\r\n    }\r\n\r\n    updateIndexes(items) {\r\n        return axios.put(API_URL + '/index', items, {headers: authHeader()})\r\n    }\r\n\r\n}\r\n\r\nexport default new TodoService();","import React, {useState} from 'react'\r\n\r\nfunction ItemForm({onCreate}) {\r\n    const [value, setValue] = useState('');\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (value.trim()) {\r\n            onCreate(value);\r\n            setValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form style={{marginBottom: '1rem'}} onSubmit={submitHandler}>\r\n            <input type='text' value={value} onChange={event => {\r\n                setValue(event.target.value)\r\n            }}/>\r\n            <button type='submit'>Add todo</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ItemForm;","import React from \"react\";\r\nimport '../css/loader.css'\r\n\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div style={{display: 'flex', justifyContent: 'center', margin: '.5rem'}}>\r\n            <div className=\"lds-dual-ring\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, {useEffect, useState} from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoService from \"../services/todo.service\"\r\nimport AuthService from \"../services/auth.service\"\r\nimport ItemForm from \"./ItemForm\";\r\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport Message from \"./Message\";\r\nimport '../css/todo.css'\r\nimport Loader from \"./Loader\";\r\n\r\nfunction TodoList() {\r\n    const [username, setUsername] = useState('');\r\n    const [items, setItems] = useState([]);\r\n    const [message, setMessage] = useState('')\r\n    const [tagMessage, setTagMessage] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function clearTagMessage() {\r\n        setTagMessage('')\r\n    }\r\n\r\n    function addTag(tag) {\r\n        let added = true;\r\n        setItems(items.map(item => {\r\n            if (item.id === tag.itemId) {\r\n                if (item.tags) {\r\n                    if (item.tags.length < 3) {\r\n                        item.tags.push(tag);\r\n                        setColor('');\r\n                        setTagMessage('');\r\n                    } else {\r\n                        setTagMessage('too much tags')\r\n                        setColor('RED')\r\n                        added = false;\r\n                        return item;\r\n                    }\r\n                } else item.tags = [tag]\r\n            }\r\n            return item\r\n        }))\r\n        if (added)\r\n            TodoService.addTag(tag).catch(error => {\r\n                if (error.response === undefined) {\r\n                    setMessage(\"Changes can not be saved\");\r\n                    setColor('RED');\r\n                }\r\n            })\r\n    }\r\n\r\n    function toggleItem(id) {\r\n        setItems(items.map(item => {\r\n            if (item.id === id) {\r\n                item.done = !item.done;\r\n                TodoService.updateItemDone(item).then(() => {\r\n                    setMessage('');\r\n                    setColor('');\r\n                }).catch(error => {\r\n                    if (error.response === undefined) {\r\n                        setMessage(\"Changes can not be saved\");\r\n                        setColor('RED');\r\n                    }\r\n                })\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    function removeItem(id) {\r\n        setItems(items.filter(item => item.id !== id).map((item, index) => {\r\n            item.index = index + 1;\r\n            return item;\r\n        }));\r\n        TodoService.removeItem(id).then(() => {\r\n            setMessage('');\r\n            setColor('');\r\n            TodoService.updateIndexes(items).catch(() => {\r\n                return undefined\r\n            })\r\n        }).catch(error => {\r\n            if (error.response === undefined) {\r\n                setMessage(\"Changes can not be saved\");\r\n                setColor('RED');\r\n            }\r\n        });\r\n    }\r\n\r\n    function addItem(title) {\r\n        let newItem = {title, done: false, index: items.length + 1, id: Date.now(), ownerName: username}\r\n        setItems(items.concat([newItem]));\r\n        TodoService.addItem(newItem).then(response => {\r\n            let responseItem = response.data;\r\n            setItems(items.concat([responseItem]));\r\n            setMessage('');\r\n            setColor('');\r\n        }).catch(error => {\r\n            if (error.response === undefined) {\r\n                setMessage(\"Changes can not be saved\");\r\n                setColor('RED');\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUsername(AuthService.getCurrentUser().username);\r\n        TodoService.getTodoItems(username).then(response => {\r\n            setMessage('');\r\n            setColor('');\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n            }, 1000);\r\n            setItems(response.data);\r\n\r\n        }).catch((error) => {\r\n            if (error.response === undefined) {\r\n                setMessage(\"Can not connect to server\");\r\n                setColor('RED');\r\n                setLoading(false)\r\n            }\r\n        })\r\n    }, [username])\r\n\r\n    function onDragEnd(param) {\r\n        const srcI = param.source.index;\r\n        const desI = param.destination?.index;\r\n        items.splice(desI, 0, items.splice(srcI, 1)[0]);\r\n        setItems(items.map((item, index) => {\r\n            item.index = index + 1;\r\n            return item;\r\n        }));\r\n        setMessage('');\r\n        setColor('');\r\n        TodoService.updateIndexes(items).catch(error => {\r\n            if (error.response === undefined) {\r\n                setMessage(\"Changes can not be saved\");\r\n                setColor('RED');\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='todoForm'>\r\n                <h1>{username}'s todo list</h1>\r\n                <ItemForm onCreate={addItem}/>\r\n                {message ? <Message message={message} color={color}/> : undefined}\r\n            </div>\r\n            <DragDropContext onDragEnd={(param) => onDragEnd(param)}>\r\n                <Droppable droppableId=\"droppable-1\">\r\n                    {(provided, _) => (\r\n                        <div style={{textAlign: \"center\"}} ref={provided.innerRef} {...provided.droppableProps}>\r\n                            {loading ? <Loader/> : items.length ? items.map((item, i) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={'draggable-' + item.id}\r\n                                    index={i}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div ref={provided.innerRef}\r\n                                             {...provided.draggableProps} {...provided.dragHandleProps}\r\n                                             style={{\r\n                                                 ...provided.draggableProps.style,\r\n                                                 borderRadius: '5px',\r\n                                                 boxShadow: snapshot.isDragging\r\n                                                     ? \"0 0 .4rem #666\"\r\n                                                     : \"none\",\r\n                                             }}>\r\n                                            <TodoItem\r\n                                                item={item}\r\n                                                key={item.id} toggleItem={toggleItem}\r\n                                                removeItem={removeItem}\r\n                                                tags={item.tags} addTag={addTag} message={tagMessage} color={color}\r\n                                                clearMessage={clearTagMessage}/>\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            )) : (\r\n                                loading ? undefined : (\r\n                                    <p>No todo!</p>\r\n                                ))\r\n                            }\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import {Route, Redirect} from \"react-router-dom\";\r\n\r\nfunction SecuredRoute(props) {\r\n    return (\r\n        <Route path={props.path} render={data => props.login ? (\r\n                <props.component {...data}/>) :\r\n            (\r\n                <Redirect to={{pathname: '/'}}/>)}/>\r\n    )\r\n}\r\n\r\nexport default SecuredRoute","import React, {useState} from \"react\";\nimport {Switch, Route, Link} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport TodoList from \"./components/TodoList\";\nimport SecuredRoute from \"./components/SecuredRoute\";\nimport AuthService from \"./services/auth.service\";\n\n\nfunction App() {\n    const [login, setLogin] = useState(!!AuthService.getCurrentUser())\n\n    function logIn() {\n        setLogin(true)\n    }\n\n    function logOut() {\n        setLogin(false)\n    }\n\n    return (\n        <div>\n            <div className='header'>\n                <h2><Link style={{textDecoration: 'none', color: 'black'}} to=\"/\">Home</Link></h2>\n                <h2><Link style={{textDecoration: 'none', color: 'black'}} to=\"/todo\">Todo list</Link></h2>\n                <div className='logout'>\n                    {login ? <button onClick={() => {\n                        AuthService.logout();\n                        logOut()\n                    }}>Logout\n                    </button> : undefined}\n                </div>\n\n            </div>\n\n            <hr/>\n\n            <div className='content'>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home logIn={logIn} logOut={logOut}/>\n                    </Route>\n                    <SecuredRoute path=\"/todo\" component={TodoList} login={login}/>\n                </Switch>\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n\n\n\n"],"sourceRoot":""}