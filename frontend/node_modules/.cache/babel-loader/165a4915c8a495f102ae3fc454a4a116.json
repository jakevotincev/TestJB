{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakev\\\\IdeaProjects\\\\Micronaut\\\\todolist\\\\frontend\\\\src\\\\components\\\\TagForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../css/modal.css';\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TagForm({\n  addTag,\n  item,\n  message,\n  messageColor\n}) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  let colors = ['RED', 'BLUE', 'BLACK', 'GREEN'];\n  const [color, setColor] = useState(colors[0]);\n  const [counter, setCounter] = useState(1);\n  const [value, setValue] = useState('');\n\n  function changeColor() {\n    setCounter((counter + 1) % 4);\n    setColor(colors[counter]);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (value.length > 20) {\n      console.log(\"too long string\");\n      return;\n    }\n\n    if (value.trim()) {\n      let tag = {\n        id: Date.now(),\n        title: value,\n        color: color,\n        itemId: item.id\n      };\n      addTag(tag);\n      setValue(' ');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShow(true),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add new tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"color-button\",\n          style: {\n            backgroundColor: color\n          },\n          onClick: changeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: value,\n            type: \"text\",\n            onChange: event => {\n              setValue(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShow(false),\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), message ? /*#__PURE__*/_jsxDEV(Message, {\n          color: messageColor,\n          message: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }, this) : undefined]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TagForm, \"yhoaW4CaPOghxjIeFNwCuY/JPDY=\");\n\n_c = TagForm;\nexport default TagForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagForm\");","map":{"version":3,"sources":["C:/Users/jakev/IdeaProjects/Micronaut/todolist/frontend/src/components/TagForm.js"],"names":["React","useState","Message","TagForm","addTag","item","message","messageColor","show","setShow","colors","color","setColor","counter","setCounter","value","setValue","changeColor","handleSubmit","event","preventDefault","length","console","log","trim","tag","id","Date","now","title","itemId","backgroundColor","target","undefined"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport '../css/modal.css'\r\nimport Message from \"./Message\";\r\n\r\nfunction TagForm({addTag, item, message, messageColor}) {\r\n    const [show, setShow] = useState(false)\r\n    let colors = ['RED', 'BLUE', 'BLACK', 'GREEN']\r\n    const [color, setColor] = useState(colors[0])\r\n    const [counter, setCounter] = useState(1)\r\n    const [value, setValue] = useState('')\r\n\r\n    function changeColor() {\r\n        setCounter((counter + 1) % 4);\r\n        setColor(colors[counter])\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (value.length > 20) {\r\n            console.log(\"too long string\");\r\n            return;\r\n        }\r\n        if (value.trim()) {\r\n            let tag = {\r\n                id: Date.now(),\r\n                title: value,\r\n                color: color,\r\n                itemId: item.id\r\n            }\r\n            addTag(tag);\r\n            setValue(' ');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button onClick={() => setShow(true)}>+</button>\r\n            {show && (<div className='modal'>\r\n                <div className='modal-body'>\r\n                    <h1>Add new tag</h1>\r\n                    <button className='color-button' style={{backgroundColor: color}} onClick={changeColor}/>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input value={value} type='text' onChange={event => {\r\n                            setValue(event.target.value)\r\n                        }}/>\r\n                        <button type='submit'>Add tag</button>\r\n                    </form>\r\n                    <button onClick={() => setShow(false)}>close</button>\r\n                    {message ? <Message color={messageColor} message={message}/> : undefined}\r\n\r\n                </div>\r\n            </div>)}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TagForm;\r\n"]},"metadata":{},"sourceType":"module"}