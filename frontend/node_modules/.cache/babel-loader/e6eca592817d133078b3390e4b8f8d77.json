{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakev\\\\IdeaProjects\\\\Micronaut\\\\todolist\\\\frontend\\\\src\\\\components\\\\TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TodoTag from \"./TodoTag\";\nimport TagForm from \"./TagForm\";\nimport { useDrag } from \"react-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  li: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '.5rem 2rem',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    marginBottom: '.5rem'\n  }\n};\n\nfunction TodoItem({\n  item,\n  toggleItem,\n  removeItem,\n  tags,\n  addTag\n}) {\n  _s();\n\n  const classes = [];\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      name: 'Any custom name',\n      type: 'Irrelevant, for now'\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0.4 : 1;\n\n  if (item.done) {\n    classes.push('done');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      opacity\n    },\n    ref: drag,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.join(' '),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        checked: item.done,\n        type: \"checkbox\",\n        onChange: () => toggleItem(item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: item.index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), \"\\xA0\", item.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), tags ? tags.map(tag => {\n      return /*#__PURE__*/_jsxDEV(TodoTag, {\n        tag: tag\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 28\n      }, this);\n    }) : undefined, /*#__PURE__*/_jsxDEV(TagForm, {\n      addTag: addTag,\n      item: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeItem(item.id),\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoItem, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["C:/Users/jakev/IdeaProjects/Micronaut/todolist/frontend/src/components/TodoItem.js"],"names":["React","TodoTag","TagForm","useDrag","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","TodoItem","item","toggleItem","removeItem","tags","addTag","classes","isDragging","drag","name","type","collect","monitor","opacity","done","push","join","id","index","title","map","tag","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,WAAtB;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,EAAE,EAAE;AACAC,IAAAA,OAAO,EAAE,MADT;AAEAC,IAAAA,cAAc,EAAE,eAFhB;AAGAC,IAAAA,UAAU,EAAE,QAHZ;AAIAC,IAAAA,OAAO,EAAE,YAJT;AAKAC,IAAAA,MAAM,EAAE,gBALR;AAMAC,IAAAA,YAAY,EAAE,KANd;AAOAC,IAAAA,YAAY,EAAE;AAPd;AADO,CAAf;;AAaA,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,UAAP;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA,IAA/B;AAAqCC,EAAAA;AAArC,CAAlB,EAAgE;AAAA;;AAC5D,QAAMC,OAAO,GAAG,EAAhB;AAEA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBlB,OAAO,CAAC;AACnCW,IAAAA,IAAI,EAAE;AAAEQ,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,IAAI,EAAE;AAAjC,KAD6B;AAEnCC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACnBL,MAAAA,UAAU,EAAEK,OAAO,CAACL,UAAR;AADO,KAAd;AAF0B,GAAD,CAAtC;AAOA,QAAMM,OAAO,GAAGN,UAAU,GAAG,GAAH,GAAS,CAAnC;;AAEA,MAAIN,IAAI,CAACa,IAAT,EAAe;AACXR,IAAAA,OAAO,CAACS,IAAR,CAAa,MAAb;AACH;;AACD,sBACI;AAAI,IAAA,KAAK,EAAE;AAACF,MAAAA;AAAD,KAAX;AAAsB,IAAA,GAAG,EAAEL,IAA3B;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEF,OAAO,CAACU,IAAR,CAAa,GAAb,CAAjB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAEf,IAAI,CAACa,IAArB;AAA2B,QAAA,IAAI,EAAC,UAAhC;AAA2C,QAAA,QAAQ,EAAE,MAAMZ,UAAU,CAACD,IAAI,CAACgB,EAAN;AAArE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAShB,IAAI,CAACiB;AAAd;AAAA;AAAA;AAAA;AAAA,cAFJ,UAIKjB,IAAI,CAACkB,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQQf,IAAI,GAAGA,IAAI,CAACgB,GAAL,CAASC,GAAG,IAAI;AACnB,0BAAO,QAAC,OAAD;AAAsB,QAAA,GAAG,EAAEA;AAA3B,SAAcA,GAAG,CAACJ,EAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAH,GAECK,SAVb,eAYI,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEjB,MAAjB;AAAyB,MAAA,IAAI,EAAEJ;AAA/B;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAQ,MAAA,OAAO,EAAE,MAAME,UAAU,CAACF,IAAI,CAACgB,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAjCQjB,Q;UAG0BV,O;;;KAH1BU,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport TodoTag from \"./TodoTag\";\r\nimport TagForm from \"./TagForm\";\r\nimport {useDrag} from \"react-dnd\";\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        padding: '.5rem 2rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '5px',\r\n        marginBottom: '.5rem'\r\n    }\r\n}\r\n\r\n\r\nfunction TodoItem({item, toggleItem, removeItem, tags, addTag}) {\r\n    const classes = []\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { name: 'Any custom name', type: 'Irrelevant, for now' },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    const opacity = isDragging ? 0.4 : 1;\r\n\r\n    if (item.done) {\r\n        classes.push('done')\r\n    }\r\n    return (\r\n        <li style={{opacity}} ref={drag} >\r\n          <span className={classes.join(' ')}>\r\n              <input checked={item.done} type='checkbox' onChange={() => toggleItem(item.id)}/>\r\n              <strong>{item.index}</strong>\r\n              &nbsp;\r\n              {item.title}\r\n          </span>\r\n            {\r\n                tags ? tags.map(tag => {\r\n                    return <TodoTag key={tag.id} tag={tag}/>\r\n                }) : undefined\r\n            }\r\n            <TagForm addTag={addTag} item={item}/>\r\n            <button onClick={() => removeItem(item.id)}>&times;</button>\r\n        </li>\r\n    );\r\n\r\n}\r\n\r\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}