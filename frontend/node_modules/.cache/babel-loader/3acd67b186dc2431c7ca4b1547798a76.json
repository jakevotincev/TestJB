{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakev\\\\IdeaProjects\\\\Micronaut\\\\todolist\\\\frontend\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport { useHistory } from \"react-router-dom\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  login,\n  logout\n}) {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const [register, setRegister] = useState(false);\n  const [message, setMessage] = useState('');\n  const [color, setColor] = useState('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if (username.trim() && password.trim()) {\n      if (!register) AuthService.login(username, password).then(() => {\n        login();\n        setMessage('');\n        setColor('');\n        history.push('/todo');\n      }).catch(error => {\n        logout();\n\n        if (error.response === undefined) {\n          setMessage(error.message);\n          setColor('RED');\n        } else if (error.response.status === 401) {\n          let message = 'Invalid login or password';\n          setMessage(message);\n          setColor('RED');\n        }\n      });else {\n        AuthService.register(username, password).then(() => {\n          setMessage('successfully registered');\n          setColor('GREEN');\n        }).catch(error => {\n          console.log(error.response);\n        });\n      }\n      setUsername('');\n      setPassword('');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: event => {\n              setUsername(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: event => {\n              setPassword(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => setRegister(false),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => setRegister(true),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), message ? /*#__PURE__*/_jsxDEV(Message, {\n        color: color,\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 28\n      }, this) : undefined]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"ADU6aFM/VhCht5l+SDV2bbqANyI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/jakev/IdeaProjects/Micronaut/todolist/frontend/src/components/Login.js"],"names":["React","useState","AuthService","useHistory","Message","Login","login","logout","username","setUsername","password","setPassword","history","register","setRegister","message","setMessage","color","setColor","submitHandler","event","preventDefault","trim","then","push","catch","error","response","undefined","status","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Message from \"./Message\";\r\n\r\n\r\nfunction Login({login, logout}) {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n    const [register, setRegister] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [color, setColor] = useState('')\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (username.trim() && password.trim()) {\r\n            if (!register)\r\n                AuthService.login(username, password).then(() => {\r\n                    login();\r\n                    setMessage('')\r\n                    setColor('')\r\n                    history.push('/todo')\r\n                }).catch((error) => {\r\n                    logout()\r\n                    if (error.response === undefined) {\r\n                        setMessage(error.message)\r\n                        setColor('RED')\r\n                    } else if (error.response.status === 401) {\r\n                        let message = 'Invalid login or password'\r\n                        setMessage(message)\r\n                        setColor('RED')\r\n                    }\r\n\r\n                })\r\n            else {\r\n                AuthService.register(username, password).then(() => {\r\n                    setMessage('successfully registered')\r\n                    setColor('GREEN')\r\n                }).catch((error) => {\r\n                    console.log(error.response);\r\n                })\r\n            }\r\n            setUsername('');\r\n            setPassword('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n                <form onSubmit={submitHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input type=\"text\" value={username} onChange={event => {\r\n                            setUsername(event.target.value)\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" value={password} onChange={event => {\r\n                            setPassword(event.target.value)\r\n                        }}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type='submit' onClick={() => setRegister(false)}>\r\n                            <span>Login</span>\r\n                        </button>\r\n\r\n                        <button type=\"submit\" onClick={() => setRegister(true)}>\r\n                            Register\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                {message ? <Message color={color} message={message}/> : undefined}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}