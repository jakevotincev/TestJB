{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakev\\\\IdeaProjects\\\\Micronaut\\\\todolist\\\\frontend\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from \"./TodoItem\";\nimport TodoService from \"../services/todo.service\";\nimport AuthService from \"../services/auth.service\";\nimport ItemForm from \"./ItemForm\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport Message from \"./Message\";\nimport '../css/todo.css';\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [items, setItems] = useState([]);\n  const [message, setMessage] = useState('');\n  const [tagMessage, setTagMessage] = useState('');\n  const [color, setColor] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  function clearTagMessage() {\n    setTagMessage('');\n  }\n\n  function addTag(tag) {\n    let added = true;\n    setItems(items.map(item => {\n      if (item.id === tag.itemId) {\n        if (item.tags) {\n          if (item.tags.length < 3) {\n            item.tags.push(tag);\n            setColor('');\n            setTagMessage('');\n          } else {\n            setTagMessage('too much tags');\n            setColor('RED');\n            added = false;\n            return item;\n          }\n        } else item.tags = [tag];\n      }\n\n      return item;\n    }));\n    if (added) TodoService.addTag(tag).catch(error => {\n      if (error.response === undefined) {\n        setMessage(\"Can not save changes on server\");\n        setColor('RED');\n      }\n    });\n  }\n\n  function toggleItem(id) {\n    setItems(items.map(item => {\n      if (item.id === id) {\n        item.done = !item.done;\n        TodoService.updateItemDone(item).then(() => {\n          setMessage('');\n          setColor('');\n        }).catch(error => {\n          if (error.response === undefined) {\n            setMessage(\"Can not save changes on server\");\n            setColor('RED');\n          }\n        });\n      }\n\n      return item;\n    }));\n  }\n\n  function removeItem(id) {\n    setItems(items.filter(item => item.id !== id).map((item, index) => {\n      item.index = index + 1;\n      return item;\n    }));\n    TodoService.removeItem(id).then(() => {\n      setMessage('');\n      setColor('');\n      TodoService.updateIndexes(items).catch(() => {\n        return undefined;\n      });\n    }).catch(error => {\n      if (error.response === undefined) {\n        setMessage(\"Can not save changes on server\");\n        setColor('RED');\n      }\n    });\n  }\n\n  function addItem(title) {\n    let newItem = {\n      title,\n      done: false,\n      index: items.length + 1,\n      id: Date.now(),\n      ownerName: username\n    };\n    setItems(items.concat([newItem]));\n    TodoService.addItem(newItem).then(response => {\n      let responseItem = response.data;\n      setItems(items.concat([responseItem]));\n      setMessage('');\n      setColor('');\n    }).catch(error => {\n      if (error.response === undefined) {\n        setMessage(\"Can not save changes on server\");\n        setColor('RED');\n      }\n    });\n  }\n\n  useEffect(() => {\n    setUsername(AuthService.getCurrentUser().username);\n    TodoService.getTodoItems(username).then(response => {\n      setMessage('');\n      setColor('');\n      setItems(response.data);\n      setLoading(false);\n    }).catch(error => {\n      if (error.response === undefined) {\n        setMessage(\"Can not connect to server\");\n        setColor('RED');\n      }\n    });\n  }, [username]);\n\n  function onDragEnd(param) {\n    var _param$destination;\n\n    const srcI = param.source.index;\n    const desI = (_param$destination = param.destination) === null || _param$destination === void 0 ? void 0 : _param$destination.index;\n    items.splice(desI, 0, items.splice(srcI, 1)[0]);\n    setItems(items.map((item, index) => {\n      item.index = index + 1;\n      return item;\n    }));\n    TodoService.updateIndexes(items).catch(error => {\n      //show error message\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [username, \"'s todo list\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n        onCreate: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), message ? /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 28\n      }, this) : undefined]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: param => onDragEnd(param),\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-1\",\n        children: (provided, _) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 41\n          }, this), items.length ? items.map((item, i) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: 'draggable-' + item.id,\n            index: i,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: { ...provided.draggableProps.style,\n                borderRadius: '5px',\n                boxShadow: snapshot.isDragging ? \"0 0 .4rem #666\" : \"none\"\n              },\n              children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                item: item,\n                toggleItem: toggleItem,\n                removeItem: removeItem,\n                tags: item.tags,\n                addTag: addTag,\n                message: tagMessage,\n                color: color,\n                clearMessage: clearTagMessage\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 41\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this)) : loading ? undefined : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No todo!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 37\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"QlKwyug6bla9g5dAhx5TmW6Fe3Q=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/jakev/IdeaProjects/Micronaut/todolist/frontend/src/components/TodoList.js"],"names":["React","useEffect","useState","TodoItem","TodoService","AuthService","ItemForm","DragDropContext","Draggable","Droppable","Message","Loader","TodoList","username","setUsername","items","setItems","message","setMessage","tagMessage","setTagMessage","color","setColor","loading","setLoading","clearTagMessage","addTag","tag","added","map","item","id","itemId","tags","length","push","catch","error","response","undefined","toggleItem","done","updateItemDone","then","removeItem","filter","index","updateIndexes","addItem","title","newItem","Date","now","ownerName","concat","responseItem","data","getCurrentUser","getTodoItems","onDragEnd","param","srcI","source","desI","destination","splice","console","log","provided","_","textAlign","innerRef","droppableProps","i","snapshot","draggableProps","dragHandleProps","style","borderRadius","boxShadow","isDragging","placeholder"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoService from \"../services/todo.service\"\r\nimport AuthService from \"../services/auth.service\"\r\nimport ItemForm from \"./ItemForm\";\r\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport Message from \"./Message\";\r\nimport '../css/todo.css'\r\nimport Loader from \"./Loader\";\r\n\r\nfunction TodoList() {\r\n    const [username, setUsername] = useState('');\r\n    const [items, setItems] = useState([]);\r\n    const [message, setMessage] = useState('')\r\n    const [tagMessage, setTagMessage] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function clearTagMessage() {\r\n        setTagMessage('')\r\n    }\r\n\r\n    function addTag(tag) {\r\n        let added = true;\r\n        setItems(items.map(item => {\r\n            if (item.id === tag.itemId) {\r\n                if (item.tags) {\r\n                    if (item.tags.length < 3) {\r\n                        item.tags.push(tag);\r\n                        setColor('');\r\n                        setTagMessage('');\r\n                    } else {\r\n                        setTagMessage('too much tags')\r\n                        setColor('RED')\r\n                        added = false;\r\n                        return item;\r\n                    }\r\n                } else item.tags = [tag]\r\n            }\r\n            return item\r\n        }))\r\n        if (added)\r\n            TodoService.addTag(tag).catch(error => {\r\n                if (error.response === undefined) {\r\n                    setMessage(\"Can not save changes on server\");\r\n                    setColor('RED');\r\n                }\r\n            })\r\n    }\r\n\r\n    function toggleItem(id) {\r\n        setItems(items.map(item => {\r\n            if (item.id === id) {\r\n                item.done = !item.done;\r\n                TodoService.updateItemDone(item).then(() => {\r\n                    setMessage('');\r\n                    setColor('');\r\n                }).catch(error => {\r\n                    if (error.response === undefined) {\r\n                        setMessage(\"Can not save changes on server\");\r\n                        setColor('RED');\r\n                    }\r\n                })\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    function removeItem(id) {\r\n        setItems(items.filter(item => item.id !== id).map((item, index) => {\r\n            item.index = index + 1;\r\n            return item;\r\n        }));\r\n        TodoService.removeItem(id).then(() => {\r\n            setMessage('');\r\n            setColor('');\r\n            TodoService.updateIndexes(items).catch(() => {\r\n                return undefined\r\n            })\r\n        }).catch(error => {\r\n            if (error.response === undefined) {\r\n                setMessage(\"Can not save changes on server\");\r\n                setColor('RED');\r\n            }\r\n        });\r\n    }\r\n\r\n    function addItem(title) {\r\n        let newItem = {title, done: false, index: items.length + 1, id: Date.now(), ownerName: username}\r\n        setItems(items.concat([newItem]));\r\n        TodoService.addItem(newItem).then(response => {\r\n            let responseItem = response.data;\r\n            setItems(items.concat([responseItem]));\r\n            setMessage('');\r\n            setColor('');\r\n        }).catch(error => {\r\n            if (error.response === undefined) {\r\n                setMessage(\"Can not save changes on server\");\r\n                setColor('RED');\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUsername(AuthService.getCurrentUser().username);\r\n        TodoService.getTodoItems(username).then(response => {\r\n            setMessage('');\r\n            setColor('');\r\n            setItems(response.data);\r\n            setLoading(false)\r\n        }).catch((error) => {\r\n            if (error.response === undefined) {\r\n                setMessage(\"Can not connect to server\");\r\n                setColor('RED');\r\n            }\r\n        })\r\n    }, [username])\r\n\r\n    function onDragEnd(param) {\r\n        const srcI = param.source.index;\r\n        const desI = param.destination?.index;\r\n        items.splice(desI, 0, items.splice(srcI, 1)[0]);\r\n        setItems(items.map((item, index) => {\r\n            item.index = index + 1;\r\n            return item;\r\n        }));\r\n        TodoService.updateIndexes(items).catch(error => {\r\n            //show error message\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='todoForm'>\r\n                <h1>{username}'s todo list</h1>\r\n                <ItemForm onCreate={addItem}/>\r\n                {message ? <Message message={message} color={color}/> : undefined}\r\n            </div>\r\n            <DragDropContext onDragEnd={(param) => onDragEnd(param)}>\r\n                <Droppable droppableId=\"droppable-1\">\r\n                    {(provided, _) => (\r\n                        <div style={{textAlign: \"center\"}} ref={provided.innerRef} {...provided.droppableProps}>\r\n                            {loading && <Loader/>}\r\n                            {items.length ? items.map((item, i) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={'draggable-' + item.id}\r\n                                    index={i}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div ref={provided.innerRef}\r\n                                             {...provided.draggableProps} {...provided.dragHandleProps}\r\n                                             style={{\r\n                                                 ...provided.draggableProps.style,\r\n                                                 borderRadius: '5px',\r\n                                                 boxShadow: snapshot.isDragging\r\n                                                     ? \"0 0 .4rem #666\"\r\n                                                     : \"none\",\r\n                                             }}>\r\n                                            <TodoItem\r\n                                                item={item}\r\n                                                key={item.id} toggleItem={toggleItem}\r\n                                                removeItem={removeItem}\r\n                                                tags={item.tags} addTag={addTag} message={tagMessage} color={color}\r\n                                                clearMessage={clearTagMessage}/>\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            )) : (\r\n                                loading ? undefined : (\r\n                                    <p>No todo!</p>\r\n                                ))\r\n                            }\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}