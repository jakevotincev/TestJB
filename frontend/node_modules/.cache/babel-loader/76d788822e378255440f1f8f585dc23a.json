{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakev\\\\IdeaProjects\\\\Micronaut\\\\todolist\\\\frontend\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from \"./TodoItem\";\nimport TodoService from \"../services/todo.service\";\nimport AuthService from \"../services/auth.service\";\nimport ItemForm from \"./ItemForm\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [items, setItems] = useState([]);\n\n  function addTag(tag) {\n    let added = true;\n    setItems(items.map(item => {\n      if (item.id === tag.itemId) {\n        if (item.tags) {\n          if (item.tags.length < 3) item.tags.push(tag);else {\n            console.log(\"too much tags\");\n            added = false;\n            return item;\n          }\n        } else item.tags = [tag];\n      }\n\n      return item;\n    }));\n    if (added) TodoService.addTag(tag).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function toggleItem(id) {\n    setItems(items.map(item => {\n      if (item.id === id) {\n        item.done = !item.done; //do something on error (not connected to server)\n\n        TodoService.updateItemDone(item).catch(error => {\n          //show error message\n          console.log(error);\n        });\n      }\n\n      return item;\n    }));\n  }\n\n  function removeItem(id) {\n    //do something on error (not connected to server)\n    setItems(items.filter(item => item.id !== id).map((item, index) => {\n      item.index = index + 1;\n      return item;\n    }));\n    TodoService.removeItem(id).then(() => {\n      TodoService.updateIndexes(items).catch(error => {\n        //show error message\n        console.log(error);\n      });\n    }).catch(error => {\n      //change connected\n      console.log(error);\n    });\n  }\n\n  function addItem(title) {\n    let newItem = {\n      title,\n      done: false,\n      index: items.length + 1,\n      id: Date.now(),\n      ownerName: username\n    };\n    setItems(items.concat([newItem]));\n    TodoService.addItem(newItem).then(response => {\n      let responseItem = response.data;\n      setItems(items.concat([responseItem]));\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    setUsername(AuthService.getCurrentUser.username);\n    TodoService.getTodoItems(username).then(response => {\n      setItems(response.data);\n    });\n  }, [username]);\n\n  function onDragEnd(param) {\n    var _param$destination;\n\n    const srcI = param.source.index;\n    const desI = (_param$destination = param.destination) === null || _param$destination === void 0 ? void 0 : _param$destination.index;\n    items.splice(desI, 0, items.splice(srcI, 1)[0]);\n    setItems(items.map((item, index) => {\n      item.index = index + 1;\n      return item;\n    }));\n    TodoService.updateIndexes(items).catch(error => {\n      //show error message\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"welcome to todolist \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n      onCreate: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: param => onDragEnd(param),\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable-1\",\n        children: (provided, _) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [items.length ? items.map((item, i) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: 'draggable-' + item.id,\n            index: i,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: { ...provided.draggableProps.style,\n                borderRadius: '5px',\n                boxShadow: snapshot.isDragging ? \"0 0 .4rem #666\" : \"none\"\n              },\n              children: /*#__PURE__*/_jsxDEV(TodoItem, {\n                item: item,\n                toggleItem: toggleItem,\n                removeItem: removeItem,\n                tags: item.tags,\n                addTag: addTag\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 41\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 34\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"KSVqdy9+aZlQNS0wz4LqNAgQVu4=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/jakev/IdeaProjects/Micronaut/todolist/frontend/src/components/TodoList.js"],"names":["React","useEffect","useState","TodoItem","TodoService","AuthService","ItemForm","DragDropContext","Draggable","Droppable","TodoList","username","setUsername","items","setItems","addTag","tag","added","map","item","id","itemId","tags","length","push","console","log","catch","error","toggleItem","done","updateItemDone","removeItem","filter","index","then","updateIndexes","addItem","title","newItem","Date","now","ownerName","concat","response","responseItem","data","getCurrentUser","getTodoItems","onDragEnd","param","srcI","source","desI","destination","splice","provided","_","innerRef","droppableProps","i","snapshot","draggableProps","dragHandleProps","style","borderRadius","boxShadow","isDragging","placeholder"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoService from \"../services/todo.service\"\r\nimport AuthService from \"../services/auth.service\"\r\nimport ItemForm from \"./ItemForm\";\r\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\r\n\r\nfunction TodoList() {\r\n    const [username, setUsername] = useState('');\r\n    const [items, setItems] = useState([]\r\n    );\r\n\r\n    function addTag(tag) {\r\n        let added = true;\r\n        setItems(items.map(item => {\r\n            if (item.id === tag.itemId) {\r\n                if (item.tags) {\r\n                    if (item.tags.length < 3)\r\n                        item.tags.push(tag)\r\n                    else {\r\n                        console.log(\"too much tags\");\r\n                        added = false;\r\n                        return item;\r\n                    }\r\n                } else item.tags = [tag]\r\n            }\r\n            return item\r\n        }))\r\n        if (added)\r\n            TodoService.addTag(tag).catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    function toggleItem(id) {\r\n        setItems(items.map(item => {\r\n            if (item.id === id) {\r\n                item.done = !item.done;\r\n                //do something on error (not connected to server)\r\n                TodoService.updateItemDone(item).catch(error => {\r\n                    //show error message\r\n                    console.log(error);\r\n                })\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    function removeItem(id) {\r\n        //do something on error (not connected to server)\r\n        setItems(items.filter(item => item.id !== id).map((item, index) => {\r\n            item.index = index + 1;\r\n            return item;\r\n        }));\r\n        TodoService.removeItem(id).then(() => {\r\n            TodoService.updateIndexes(items).catch(error => {\r\n                //show error message\r\n                console.log(error);\r\n            });\r\n        }).catch(error => {\r\n            //change connected\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    function addItem(title) {\r\n        let newItem = {title, done: false, index: items.length + 1, id: Date.now(), ownerName: username}\r\n        setItems(items.concat([newItem]));\r\n        TodoService.addItem(newItem).then(response => {\r\n            let responseItem = response.data;\r\n            setItems(items.concat([responseItem]));\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUsername(AuthService.getCurrentUser.username);\r\n        TodoService.getTodoItems(username).then(response => {\r\n            setItems(response.data);\r\n        })\r\n    }, [username])\r\n\r\n    function onDragEnd(param) {\r\n        const srcI = param.source.index;\r\n        const desI = param.destination?.index;\r\n        items.splice(desI, 0, items.splice(srcI, 1)[0]);\r\n        setItems(items.map((item, index) => {\r\n            item.index = index + 1;\r\n            return item;\r\n        }));\r\n        TodoService.updateIndexes(items).catch(error => {\r\n            //show error message\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>welcome to todolist {username}</h1>\r\n            <ItemForm onCreate={addItem}/>\r\n            <DragDropContext onDragEnd={(param) => onDragEnd(param)}>\r\n                <Droppable droppableId=\"droppable-1\">\r\n                    {(provided, _) => (\r\n                        <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                            {items.length ? items.map((item, i) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={'draggable-' + item.id}\r\n                                    index={i}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div ref={provided.innerRef}\r\n                                             {...provided.draggableProps} {...provided.dragHandleProps}\r\n                                             style={{\r\n                                                 ...provided.draggableProps.style,\r\n                                                 borderRadius: '5px',\r\n                                                 boxShadow: snapshot.isDragging\r\n                                                     ? \"0 0 .4rem #666\"\r\n                                                     : \"none\",\r\n                                             }}>\r\n                                            <TodoItem\r\n                                                item={item}\r\n                                                key={item.id} toggleItem={toggleItem}\r\n                                                removeItem={removeItem}\r\n                                                tags={item.tags} addTag={addTag}/>\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            )) : <p>No items</p>}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}