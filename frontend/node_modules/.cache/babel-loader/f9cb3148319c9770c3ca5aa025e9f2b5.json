{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakev\\\\IdeaProjects\\\\Micronaut\\\\todolist\\\\frontend\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TodoItem from \"./TodoItem\";\nimport TodoService from \"../services/todo.service\";\nimport ItemForm from \"./ItemForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [username, setUsername] = useState(\"jake\");\n  const [items, setItems] = useState([]);\n\n  function toggleItem(index) {\n    setItems(items.map(item => {\n      if (item.index === index) {\n        item.done = !item.done; //do something on error (not connected to server)\n\n        TodoService.updateItemDone(item).then(() => {\n          return undefined;\n        }).catch(error => {\n          //show error message\n          console.log(error);\n        });\n      }\n\n      return item;\n    }));\n  }\n\n  function removeItem(index) {\n    //do something on error (not connected to server)\n    setItems(items.filter(item => item.index !== index).map((item, index) => {\n      item.index = index + 1;\n      return item;\n    })); // TodoService.removeItem(id).then(() => {\n    //     TodoService.updateIndexes(items).then(() => {\n    //         return undefined;\n    //     }).catch(error => {\n    //         //show error message\n    //         console.log(error);\n    //     });\n    // }).catch(error => {\n    //     //change connected\n    //     console.log(error);\n    // });\n  }\n\n  function addItem(title) {\n    setItems(items.concat([{\n      title,\n      done: false,\n      index: items.length + 1\n    }]));\n  }\n\n  useEffect(() => {\n    TodoService.getTodoItems(username).then(response => {\n      setItems(response.data);\n    });\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"welcome to todolist \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n      onCreate: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), items.length ? items.map(item => {\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        item: item,\n        toggleItem: toggleItem,\n        removeItem: removeItem\n      }, item.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"dGbdhCZ8NS0OBJkcxDM80hzlt7c=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/jakev/IdeaProjects/Micronaut/todolist/frontend/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoItem","TodoService","ItemForm","TodoList","username","setUsername","items","setItems","toggleItem","index","map","item","done","updateItemDone","then","undefined","catch","error","console","log","removeItem","filter","addItem","title","concat","length","getTodoItems","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,MAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAGA,WAASU,UAAT,CAAoBC,KAApB,EAA2B;AACvBF,IAAAA,QAAQ,CAACD,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AACvB,UAAIA,IAAI,CAACF,KAAL,KAAeA,KAAnB,EAA0B;AACtBE,QAAAA,IAAI,CAACC,IAAL,GAAY,CAACD,IAAI,CAACC,IAAlB,CADsB,CAEtB;;AACAX,QAAAA,WAAW,CAACY,cAAZ,CAA2BF,IAA3B,EAAiCG,IAAjC,CAAsC,MAAM;AACpC,iBAAOC,SAAP;AACH,SAFL,EAGEC,KAHF,CAGQC,KAAK,IAAI;AACb;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,SAND;AAOH;;AACD,aAAON,IAAP;AACH,KAbQ,CAAD,CAAR;AAcH;;AAGD,WAASS,UAAT,CAAoBX,KAApB,EAA2B;AACvB;AACAF,IAAAA,QAAQ,CAACD,KAAK,CAACe,MAAN,CAAaV,IAAI,IAAIA,IAAI,CAACF,KAAL,KAAeA,KAApC,EAA2CC,GAA3C,CAA+C,CAACC,IAAD,EAAOF,KAAP,KAAiB;AACrEE,MAAAA,IAAI,CAACF,KAAL,GAAaA,KAAK,GAAG,CAArB;AACA,aAAOE,IAAP;AACH,KAHQ,CAAD,CAAR,CAFuB,CAMvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,WAASW,OAAT,CAAiBC,KAAjB,EAAuB;AACnBhB,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAa,CAClB;AACID,MAAAA,KADJ;AAEIX,MAAAA,IAAI,EAAE,KAFV;AAGIH,MAAAA,KAAK,EAAEH,KAAK,CAACmB,MAAN,GAAe;AAH1B,KADkB,CAAb,CAAD,CAAR;AAOH;;AAED1B,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,WAAW,CAACyB,YAAZ,CAAyBtB,QAAzB,EAAmCU,IAAnC,CAAwCa,QAAQ,IAAI;AAChDpB,MAAAA,QAAQ,CAACoB,QAAQ,CAACC,IAAV,CAAR;AACH,KAFD;AAIH,GALQ,EAKN,CAACxB,QAAD,CALM,CAAT;AAOA,sBACI;AAAA,4BACI;AAAA,yCAAyBA,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEkB;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKhB,KAAK,CAACmB,MAAN,GAAenB,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;AAChC,0BAAO,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAuC,QAAA,UAAU,EAAEH,UAAnD;AAA+D,QAAA,UAAU,EAAEY;AAA3E,SAA2BT,IAAI,CAACF,KAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFe,CAAf,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GArEQN,Q;;KAAAA,Q;AAuET,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoService from \"../services/todo.service\"\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nfunction TodoList() {\r\n    const [username, setUsername] = useState(\"jake\");\r\n    const [items, setItems] = useState([]\r\n    );\r\n\r\n    function toggleItem(index) {\r\n        setItems(items.map(item => {\r\n            if (item.index === index) {\r\n                item.done = !item.done;\r\n                //do something on error (not connected to server)\r\n                TodoService.updateItemDone(item).then(() => {\r\n                        return undefined;\r\n                    }\r\n                ).catch(error => {\r\n                    //show error message\r\n                    console.log(error);\r\n                })\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n\r\n    function removeItem(index) {\r\n        //do something on error (not connected to server)\r\n        setItems(items.filter(item => item.index !== index).map((item, index) => {\r\n            item.index = index + 1;\r\n            return item;\r\n        }));\r\n        // TodoService.removeItem(id).then(() => {\r\n        //     TodoService.updateIndexes(items).then(() => {\r\n        //         return undefined;\r\n        //     }).catch(error => {\r\n        //         //show error message\r\n        //         console.log(error);\r\n        //     });\r\n        // }).catch(error => {\r\n        //     //change connected\r\n        //     console.log(error);\r\n        // });\r\n    }\r\n\r\n    function addItem(title){\r\n        setItems(items.concat([\r\n            {\r\n                title,\r\n                done: false,\r\n                index: items.length + 1,\r\n            }\r\n        ]))\r\n    }\r\n\r\n    useEffect(() => {\r\n        TodoService.getTodoItems(username).then(response => {\r\n            setItems(response.data);\r\n        })\r\n\r\n    }, [username])\r\n\r\n    return (\r\n        <div>\r\n            <h1>welcome to todolist {username}</h1>\r\n            <ItemForm onCreate={addItem}/>\r\n            {items.length ? items.map((item) => {\r\n                return <TodoItem item={item} key={item.index} toggleItem={toggleItem} removeItem={removeItem}/>\r\n            }) : <p>No items</p>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}