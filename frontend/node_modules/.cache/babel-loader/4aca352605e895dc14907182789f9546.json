{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakev\\\\IdeaProjects\\\\Micronaut\\\\todolist\\\\frontend\\\\src\\\\components\\\\todolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TodoItem from \"./todoitem\";\nimport TodoService from \"../services/todo.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [username, setUsername] = useState(\"jake\");\n  const [items, setItems] = useState([]);\n\n  function toggleItem(id) {\n    setItems(items.map(item => {\n      if (item.id === id) {\n        item.done = !item.done; //do something on error (not connected to server)\n\n        TodoService.updateItemDone(item).then(() => {\n          return undefined;\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n\n      return item;\n    }));\n  } //todo: recalculate indexes\n\n\n  function removeItem(id) {\n    //do something on error (not connected to server)\n    TodoService.removeItem(id).then(() => {\n      setItems(items.filter(item => item.id !== id));\n      let newItems = items.map((item, index) => {\n        item.index = index + 1;\n        return item;\n      });\n      console.log(newItems);\n      TodoService.updateIndexes(newItems).then(() => {\n        setItems(newItems);\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    TodoService.getTodoItems(username).then(response => {\n      setItems(response.data);\n    });\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"welcome to todolist \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), items.map(item => {\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        item: item,\n        toggleItem: toggleItem,\n        removeItem: removeItem\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"dGbdhCZ8NS0OBJkcxDM80hzlt7c=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/jakev/IdeaProjects/Micronaut/todolist/frontend/src/components/todolist.js"],"names":["React","useState","useEffect","TodoItem","TodoService","TodoList","username","setUsername","items","setItems","toggleItem","id","map","item","done","updateItemDone","then","undefined","catch","error","console","log","removeItem","filter","newItems","index","updateIndexes","getTodoItems","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,MAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAGA,WAASS,UAAT,CAAoBC,EAApB,EAAwB;AACpBF,IAAAA,QAAQ,CAACD,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AACvB,UAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhB,EAAoB;AAChBE,QAAAA,IAAI,CAACC,IAAL,GAAY,CAACD,IAAI,CAACC,IAAlB,CADgB,CAEhB;;AACAV,QAAAA,WAAW,CAACW,cAAZ,CAA2BF,IAA3B,EAAiCG,IAAjC,CAAsC,MAAM;AACpC,iBAAOC,SAAP;AACH,SAFL,EAGEC,KAHF,CAGQC,KAAK,IAAI;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,SALD;AAOH;;AACD,aAAON,IAAP;AACH,KAbQ,CAAD,CAAR;AAcH,GApBe,CAsBhB;;;AACA,WAASS,UAAT,CAAoBX,EAApB,EAAwB;AACpB;AACAP,IAAAA,WAAW,CAACkB,UAAZ,CAAuBX,EAAvB,EAA2BK,IAA3B,CAAgC,MAAM;AAClCP,MAAAA,QAAQ,CAACD,KAAK,CAACe,MAAN,CAAaV,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACA,UAAIa,QAAQ,GAAGhB,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOY,KAAP,KAAiB;AACtCZ,QAAAA,IAAI,CAACY,KAAL,GAAaA,KAAK,GAAG,CAArB;AACA,eAAOZ,IAAP;AACH,OAHc,CAAf;AAIAO,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACApB,MAAAA,WAAW,CAACsB,aAAZ,CAA0BF,QAA1B,EAAoCR,IAApC,CAAyC,MAAM;AAC3CP,QAAAA,QAAQ,CAACe,QAAD,CAAR;AACH,OAFD,EAEGN,KAFH,CAESC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAJD;AAKH,KAZD,EAYGD,KAZH,CAYSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAdD;AAiBH;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,WAAW,CAACuB,YAAZ,CAAyBrB,QAAzB,EAAmCU,IAAnC,CAAwCY,QAAQ,IAAI;AAChDnB,MAAAA,QAAQ,CAACmB,QAAQ,CAACC,IAAV,CAAR;AACH,KAFD;AAIH,GALQ,EAKN,CAACvB,QAAD,CALM,CAAT;AAOA,sBACI;AAAA,4BACI;AAAA,yCAAyBA,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;AACjB,0BAAO,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAoC,QAAA,UAAU,EAAEH,UAAhD;AAA4D,QAAA,UAAU,EAAEY;AAAxE,SAA2BT,IAAI,CAACF,EAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA3DQN,Q;;KAAAA,Q;AA6DT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport TodoItem from \"./todoitem\";\r\nimport TodoService from \"../services/todo.service\"\r\n\r\nfunction TodoList() {\r\n    const [username, setUsername] = useState(\"jake\");\r\n    const [items, setItems] = useState([]\r\n    );\r\n\r\n    function toggleItem(id) {\r\n        setItems(items.map(item => {\r\n            if (item.id === id) {\r\n                item.done = !item.done;\r\n                //do something on error (not connected to server)\r\n                TodoService.updateItemDone(item).then(() => {\r\n                        return undefined;\r\n                    }\r\n                ).catch(error => {\r\n                    console.log(error);\r\n                })\r\n\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    //todo: recalculate indexes\r\n    function removeItem(id) {\r\n        //do something on error (not connected to server)\r\n        TodoService.removeItem(id).then(() => {\r\n            setItems(items.filter(item => item.id !== id));\r\n            let newItems = items.map((item, index) => {\r\n                item.index = index + 1;\r\n                return item;\r\n            });\r\n            console.log(newItems);\r\n            TodoService.updateIndexes(newItems).then(() => {\r\n                setItems(newItems);\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        TodoService.getTodoItems(username).then(response => {\r\n            setItems(response.data)\r\n        })\r\n\r\n    }, [username])\r\n\r\n    return (\r\n        <div>\r\n            <h1>welcome to todolist {username}</h1>\r\n            {items.map((item) => {\r\n                return <TodoItem item={item} key={item.id} toggleItem={toggleItem} removeItem={removeItem}/>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}