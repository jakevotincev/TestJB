{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakev\\\\IdeaProjects\\\\Micronaut\\\\todolist\\\\frontend\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TodoItem from \"./TodoItem\";\nimport TodoService from \"../services/todo.service\";\nimport ItemForm from \"./ItemForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [username, setUsername] = useState(\"jake\");\n  const [items, setItems] = useState([]);\n\n  function toggleItem(id) {\n    setItems(items.map(item => {\n      if (item.id === id) {\n        item.done = !item.done; //do something on error (not connected to server)\n\n        TodoService.updateItemDone(item).then(() => {\n          return undefined;\n        }).catch(error => {\n          //show error message\n          console.log(error);\n        });\n      }\n\n      return item;\n    }));\n  }\n\n  function removeItem(id) {\n    //do something on error (not connected to server)\n    setItems(items.filter(item => item.id !== id).map((item, index) => {\n      item.index = index + 1;\n      return item;\n    }));\n    TodoService.removeItem(id).then(() => {\n      TodoService.updateIndexes(items).then(() => {\n        return undefined;\n      }).catch(error => {\n        //show error message\n        console.log(error);\n      });\n    }).catch(error => {\n      //change connected\n      console.log(error);\n    });\n  }\n\n  function addItem(title) {\n    setItems(items.concat([{\n      title,\n      done: false,\n      index: items.length + 1\n    }]));\n  } // useEffect(() => {\n  //     TodoService.getTodoItems(username).then(response => {\n  //         setItems(response.data);\n  //     })\n  //\n  // }, [username])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"welcome to todolist \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n      onCreate: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), items.length ? items.map(item => {\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        item: item,\n        toggleItem: toggleItem,\n        removeItem: removeItem\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"/SwH6cHd4H9+KRS03j5/CgsrcFc=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/jakev/IdeaProjects/Micronaut/todolist/frontend/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoItem","TodoService","ItemForm","TodoList","username","setUsername","items","setItems","toggleItem","id","map","item","done","updateItemDone","then","undefined","catch","error","console","log","removeItem","filter","index","updateIndexes","addItem","title","concat","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoService from \"../services/todo.service\"\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nfunction TodoList() {\r\n    const [username, setUsername] = useState(\"jake\");\r\n    const [items, setItems] = useState([]\r\n    );\r\n\r\n    function toggleItem(id) {\r\n        setItems(items.map(item => {\r\n            if (item.id === id) {\r\n                item.done = !item.done;\r\n                //do something on error (not connected to server)\r\n                TodoService.updateItemDone(item).then(() => {\r\n                        return undefined;\r\n                    }\r\n                ).catch(error => {\r\n                    //show error message\r\n                    console.log(error);\r\n                })\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n\r\n    function removeItem(id) {\r\n        //do something on error (not connected to server)\r\n        setItems(items.filter(item => item.id !== id).map((item, index) => {\r\n            item.index = index + 1;\r\n            return item;\r\n        }));\r\n        TodoService.removeItem(id).then(() => {\r\n            TodoService.updateIndexes(items).then(() => {\r\n                return undefined;\r\n            }).catch(error => {\r\n                //show error message\r\n                console.log(error);\r\n            });\r\n        }).catch(error => {\r\n            //change connected\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    function addItem(title){\r\n        setItems(items.concat([\r\n            {\r\n                title,\r\n                done: false,\r\n                index: items.length + 1\r\n            }\r\n        ]))\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     TodoService.getTodoItems(username).then(response => {\r\n    //         setItems(response.data);\r\n    //     })\r\n    //\r\n    // }, [username])\r\n\r\n    return (\r\n        <div>\r\n            <h1>welcome to todolist {username}</h1>\r\n            <ItemForm onCreate={addItem}/>\r\n            {items.length ? items.map((item) => {\r\n                return <TodoItem item={item} key={item.id} toggleItem={toggleItem} removeItem={removeItem}/>\r\n            }) : <p>No items</p>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}