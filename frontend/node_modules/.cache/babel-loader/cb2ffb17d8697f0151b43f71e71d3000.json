{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakev\\\\IdeaProjects\\\\Micronaut\\\\todolist\\\\frontend\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TodoItem from \"./TodoItem\";\nimport TodoService from \"../services/todo.service\";\nimport ItemForm from \"./ItemForm\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [username, setUsername] = useState(\"jake\");\n  const [items, setItems] = useState([]);\n\n  function addTag(tag) {\n    let added = true;\n    setItems(items.map(item => {\n      if (item.id === tag.itemId) {\n        if (item.tags) {\n          if (item.tags.length < 3) item.tags.push(tag);else {\n            console.log(\"too much tags\");\n            added = false;\n            return item;\n          }\n        } else item.tags = [tag];\n      }\n\n      return item;\n    }));\n    if (added) TodoService.addTag(tag).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function toggleItem(id) {\n    setItems(items.map(item => {\n      if (item.id === id) {\n        item.done = !item.done; //do something on error (not connected to server)\n\n        TodoService.updateItemDone(item).catch(error => {\n          //show error message\n          console.log(error);\n        });\n      }\n\n      return item;\n    }));\n  }\n\n  function removeItem(id) {\n    //do something on error (not connected to server)\n    setItems(items.filter(item => item.id !== id).map((item, index) => {\n      item.index = index + 1;\n      return item;\n    }));\n    TodoService.removeItem(id).then(() => {\n      TodoService.updateIndexes(items).catch(error => {\n        //show error message\n        console.log(error);\n      });\n    }).catch(error => {\n      //change connected\n      console.log(error);\n    });\n  }\n\n  function addItem(title) {\n    let newItem = {\n      title,\n      done: false,\n      index: items.length + 1,\n      id: Date.now(),\n      ownerName: username\n    };\n    setItems(items.concat([newItem]));\n    TodoService.addItem(newItem).then(response => {\n      let responseItem = response.data;\n      setItems(items.concat([responseItem]));\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    TodoService.getTodoItems(username).then(response => {\n      setItems(response.data);\n    });\n  }, [username]);\n\n  let onDragEnd = result => {//gh\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"welcome to todolist \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n      onCreate: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: (...props) => {\n        console.log(this.props);\n      },\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: items.length ? items.map(item => {\n            return /*#__PURE__*/_jsxDEV(TodoItem, {\n              item: item,\n              toggleItem: toggleItem,\n              removeItem: removeItem,\n              tags: item.tags,\n              addTag: addTag\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 40\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"dGbdhCZ8NS0OBJkcxDM80hzlt7c=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/jakev/IdeaProjects/Micronaut/todolist/frontend/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoItem","TodoService","ItemForm","DndProvider","HTML5Backend","DragDropContext","Droppable","TodoList","username","setUsername","items","setItems","addTag","tag","added","map","item","id","itemId","tags","length","push","console","log","catch","error","toggleItem","done","updateItemDone","removeItem","filter","index","then","updateIndexes","addItem","title","newItem","Date","now","ownerName","concat","response","responseItem","data","getTodoItems","onDragEnd","result","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoService from \"../services/todo.service\"\r\nimport ItemForm from \"./ItemForm\";\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\r\n\r\nfunction TodoList() {\r\n    const [username, setUsername] = useState(\"jake\");\r\n    const [items, setItems] = useState([]\r\n    );\r\n\r\n    function addTag(tag) {\r\n        let added = true;\r\n        setItems(items.map(item => {\r\n            if (item.id === tag.itemId) {\r\n                if (item.tags) {\r\n                    if (item.tags.length < 3)\r\n                        item.tags.push(tag)\r\n                    else {\r\n                        console.log(\"too much tags\");\r\n                        added = false;\r\n                        return item;\r\n                    }\r\n                } else item.tags = [tag]\r\n            }\r\n            return item\r\n        }))\r\n        if (added)\r\n            TodoService.addTag(tag).catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    function toggleItem(id) {\r\n        setItems(items.map(item => {\r\n            if (item.id === id) {\r\n                item.done = !item.done;\r\n                //do something on error (not connected to server)\r\n                TodoService.updateItemDone(item).catch(error => {\r\n                    //show error message\r\n                    console.log(error);\r\n                })\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n\r\n    function removeItem(id) {\r\n        //do something on error (not connected to server)\r\n        setItems(items.filter(item => item.id !== id).map((item, index) => {\r\n            item.index = index + 1;\r\n            return item;\r\n        }));\r\n        TodoService.removeItem(id).then(() => {\r\n            TodoService.updateIndexes(items).catch(error => {\r\n                //show error message\r\n                console.log(error);\r\n            });\r\n        }).catch(error => {\r\n            //change connected\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    function addItem(title) {\r\n        let newItem = {title, done: false, index: items.length + 1, id: Date.now(), ownerName: username}\r\n        setItems(items.concat([newItem]));\r\n        TodoService.addItem(newItem).then(response => {\r\n            let responseItem = response.data;\r\n            setItems(items.concat([responseItem]));\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        TodoService.getTodoItems(username).then(response => {\r\n            setItems(response.data);\r\n        })\r\n    }, [username])\r\n\r\n    let onDragEnd = result =>{\r\n        //gh\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>welcome to todolist {username}</h1>\r\n            <ItemForm onCreate={addItem}/>\r\n                <DragDropContext onDragEnd = {(...props)=>{\r\n                    console.log(this.props)\r\n                }}>\r\n                    <Droppable>\r\n                        <div>\r\n                            {items.length ? items.map((item) => {\r\n                                return <TodoItem item={item} key={item.id} toggleItem={toggleItem} removeItem={removeItem}\r\n                                                 tags={item.tags} addTag={addTag}/>\r\n                            }) : <p>No items</p>}\r\n                        </div>\r\n                    </Droppable>\r\n\r\n                </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}