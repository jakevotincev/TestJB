{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakev\\\\IdeaProjects\\\\Micronaut\\\\todolist\\\\frontend\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TodoItem from \"./TodoItem\";\nimport TodoService from \"../services/todo.service\";\nimport ItemForm from \"./ItemForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [username, setUsername] = useState(\"jake\");\n  const [items, setItems] = useState([]);\n\n  function addTag(tag) {\n    console.log(tag);\n    setItems(items.map(item => {\n      if (item.id === tag.ownerId) {\n        if (item.tags) {\n          console.log(item);\n          item.tags.push(tag);\n        } else item.tags = [tag];\n      }\n\n      return item;\n    }));\n  }\n\n  function toggleItem(id) {\n    setItems(items.map(item => {\n      if (item.id === id) {\n        item.done = !item.done; //do something on error (not connected to server)\n\n        TodoService.updateItemDone(item).then(() => {\n          return undefined;\n        }).catch(error => {\n          //show error message\n          console.log(error);\n        });\n      }\n\n      return item;\n    }));\n  }\n\n  function removeItem(id) {\n    //do something on error (not connected to server)\n    setItems(items.filter(item => item.id !== id).map((item, index) => {\n      item.index = index + 1;\n      return item;\n    }));\n    TodoService.removeItem(id).then(() => {\n      TodoService.updateIndexes(items).then(() => {\n        return undefined;\n      }).catch(error => {\n        //show error message\n        console.log(error);\n      });\n    }).catch(error => {\n      //change connected\n      console.log(error);\n    });\n  }\n\n  function addItem(title) {\n    let newItem = {\n      title,\n      done: false,\n      index: items.length + 1,\n      id: Date.now(),\n      ownerName: username\n    };\n    setItems(items.concat([newItem]));\n    TodoService.addItem(newItem).then(response => {\n      let responseItem = response.data;\n      setItems(items.concat([responseItem]));\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    TodoService.getTodoItems(username).then(response => {\n      setItems(response.data);\n    });\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"welcome to todolist \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n      onCreate: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), items.length ? items.map(item => {\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        item: item,\n        toggleItem: toggleItem,\n        removeItem: removeItem,\n        tags: item.tags,\n        addTag: addTag\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 24\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"dGbdhCZ8NS0OBJkcxDM80hzlt7c=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/jakev/IdeaProjects/Micronaut/todolist/frontend/src/components/TodoList.js"],"names":["React","useState","useEffect","TodoItem","TodoService","ItemForm","TodoList","username","setUsername","items","setItems","addTag","tag","console","log","map","item","id","ownerId","tags","push","toggleItem","done","updateItemDone","then","undefined","catch","error","removeItem","filter","index","updateIndexes","addItem","title","newItem","length","Date","now","ownerName","concat","response","responseItem","data","getTodoItems"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport TodoService from \"../services/todo.service\"\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nfunction TodoList() {\r\n    const [username, setUsername] = useState(\"jake\");\r\n    const [items, setItems] = useState([]\r\n    );\r\n\r\n    function addTag(tag) {\r\n        console.log(tag)\r\n        setItems(items.map(item => {\r\n            if (item.id === tag.ownerId) {\r\n                if (item.tags) {\r\n                    console.log(item)\r\n                    item.tags.push(tag)\r\n                }\r\n                else item.tags = [tag]\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n    function toggleItem(id) {\r\n        setItems(items.map(item => {\r\n            if (item.id === id) {\r\n                item.done = !item.done;\r\n                //do something on error (not connected to server)\r\n                TodoService.updateItemDone(item).then(() => {\r\n                        return undefined;\r\n                    }\r\n                ).catch(error => {\r\n                    //show error message\r\n                    console.log(error);\r\n                })\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n\r\n    function removeItem(id) {\r\n        //do something on error (not connected to server)\r\n        setItems(items.filter(item => item.id !== id).map((item, index) => {\r\n            item.index = index + 1;\r\n            return item;\r\n        }));\r\n        TodoService.removeItem(id).then(() => {\r\n            TodoService.updateIndexes(items).then(() => {\r\n                return undefined;\r\n            }).catch(error => {\r\n                //show error message\r\n                console.log(error);\r\n            });\r\n        }).catch(error => {\r\n            //change connected\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    function addItem(title) {\r\n        let newItem = {title, done: false, index: items.length + 1, id: Date.now(), ownerName: username}\r\n        setItems(items.concat([newItem]));\r\n        TodoService.addItem(newItem).then(response => {\r\n            let responseItem = response.data;\r\n            setItems(items.concat([responseItem]));\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        TodoService.getTodoItems(username).then(response => {\r\n            setItems(response.data);\r\n        })\r\n\r\n    }, [username])\r\n\r\n    return (\r\n        <div>\r\n            <h1>welcome to todolist {username}</h1>\r\n            <ItemForm onCreate={addItem}/>\r\n            {items.length ? items.map((item) => {\r\n                return <TodoItem item={item} key={item.id} toggleItem={toggleItem} removeItem={removeItem}\r\n                                 tags={item.tags} addTag={addTag}/>\r\n            }) : <p>No items</p>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}